---
// src/pages/portfolio.astro
import Layout from '../layouts/Layout.astro'
import { BUSINESS_INFO } from '../utils/constants'
import { getAllProjects, getUniqueCategories, getUniqueTechnologies } from '../utils/projects'
import FeaturedProjectsContainer from '../components/portfolio/FeaturedProjectsContainer.astro'
import AllProjectsContainer from '../components/portfolio/AllProjectsContainer.astro'

const pageTitle = 'Portfolio - Web Development Projects'
const pageDescription = `Explore ${BUSINESS_INFO.name}'s complete portfolio of web development projects, featuring modern websites, web applications, and digital solutions built with Python, Vue.js, and more.`

// Get all project data for stats
const allProjects = getAllProjects()
const liveProjects = allProjects.filter(p => p.status === 'live')
const categories = getUniqueCategories()
const technologies = getUniqueTechnologies()
---

<Layout title={pageTitle} description={pageDescription}>
  <main class="min-h-screen">
    
    <!-- Enhanced Header Section -->
    <section class="bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 text-white py-24">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center animate-on-scroll">
          <h1 class="text-5xl md:text-6xl lg:text-7xl font-bold mb-6">
            <span class="bg-gradient-to-r from-cyan-400 via-blue-400 to-purple-400 bg-clip-text text-transparent">
              Portfolio
            </span>
          </h1>
          <p class="text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto mb-12 leading-relaxed">
            A comprehensive showcase of web development projects, from interactive applications 
            you can explore live to enterprise solutions available for consultation.
          </p>
          
          <!-- Enhanced Stats -->
          <div class="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto">
            <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-colors">
              <div class="text-3xl font-bold text-cyan-400 mb-2">{allProjects.length}</div>
              <div class="text-sm text-gray-300">Total Projects</div>
            </div>
            <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-colors">
              <div class="text-3xl font-bold text-green-400 mb-2">{liveProjects.length}</div>
              <div class="text-sm text-gray-300">Live Applications</div>
            </div>
            <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-colors">
              <div class="text-3xl font-bold text-purple-400 mb-2">{categories.length - 1}</div>
              <div class="text-sm text-gray-300">Categories</div>
            </div>
            <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-colors">
              <div class="text-3xl font-bold text-yellow-400 mb-2">{technologies.length}+</div>
              <div class="text-sm text-gray-300">Technologies</div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Projects Container Section -->
    <section class="py-20">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <FeaturedProjectsContainer />
        <AllProjectsContainer />
      </div>
    </section>

    <!-- No Results Message -->
    <section id="portfolio-no-results" class="hidden py-20 text-center">
      <div class="max-w-md mx-auto px-4">
        <div class="bg-gray-100 rounded-full w-24 h-24 flex items-center justify-center mx-auto mb-6">
          <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.29-1.009-5.824-2.412M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"/>
          </svg>
        </div>
        <h3 class="text-2xl font-bold text-gray-900 mb-4">No projects found</h3>
        <p class="text-gray-600 mb-6 text-lg">
          Try adjusting your search terms or filters to discover more projects
        </p>
        <button 
          id="portfolio-reset-filters"
          class="px-8 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-semibold"
        >
          Show All Projects
        </button>
      </div>
    </section>

    <!-- Enhanced CTA Section -->
    <section class="bg-gradient-to-br from-blue-600 via-indigo-600 to-purple-700 text-white py-20">
      <div class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <div class="animate-on-scroll">
          <h2 class="text-4xl md:text-5xl font-bold mb-6 leading-tight">
            Ready to Build Something
            <span class="block bg-gradient-to-r from-cyan-300 to-yellow-300 bg-clip-text text-transparent">
              Extraordinary?
            </span>
          </h2>
          <p class="text-xl text-blue-100 mb-10 max-w-3xl mx-auto leading-relaxed">
            Let's collaborate to bring your vision to life with cutting-edge web technologies, 
            innovative design, and robust development practices.
          </p>
          
          <div class="flex flex-col sm:flex-row gap-6 justify-center">
            <a 
              href="/contact?tab=project" 
              class="inline-flex items-center px-10 py-5 bg-white text-blue-600 rounded-2xl font-bold text-lg hover:bg-gray-50 transition-all duration-300 transform hover:scale-105 shadow-2xl group"
            >
              <svg class="w-6 h-6 mr-3 group-hover:scale-110 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
              </svg>
              Start Your Project
            </a>
            
            <a 
              href="/services" 
              class="inline-flex items-center px-10 py-5 border-2 border-white/30 text-white rounded-2xl font-bold text-lg hover:bg-white/10 hover:border-white/50 transition-all duration-300 backdrop-blur-sm"
            >
              <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h4M9 7h6m-6 4h6m-6 4h6"/>
              </svg>
              Explore Services
            </a>
          </div>

          <!-- Contact Methods -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mt-16 max-w-4xl mx-auto">
            <a 
              href={`mailto:${BUSINESS_INFO.contact.email}`}
              class="group bg-white/10 backdrop-blur-sm rounded-2xl p-6 hover:bg-white/20 transition-all duration-300 border border-white/20"
            >
              <div class="w-12 h-12 bg-blue-500/20 rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform">
                <svg class="w-6 h-6 text-cyan-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
              </div>
              <h3 class="font-semibold mb-2">Email</h3>
              <p class="text-blue-200 text-sm">Response within 24 hours</p>
            </a>
            
            <a 
              href={`tel:${BUSINESS_INFO.contact.phone}`}
              class="group bg-white/10 backdrop-blur-sm rounded-2xl p-6 hover:bg-white/20 transition-all duration-300 border border-white/20"
            >
              <div class="w-12 h-12 bg-green-500/20 rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform">
                <svg class="w-6 h-6 text-green-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                </svg>
              </div>
              <h3 class="font-semibold mb-2">Phone</h3>
              <p class="text-blue-200 text-sm">Direct consultation line</p>
            </a>
            
            <div class="group bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
              <div class="w-12 h-12 bg-purple-500/20 rounded-xl flex items-center justify-center mx-auto mb-4">
                <svg class="w-6 h-6 text-purple-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
              </div>
              <h3 class="font-semibold mb-2">Location</h3>
              <p class="text-blue-200 text-sm">{BUSINESS_INFO.contact.address.city}, UK</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  /* Enhanced animations */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  .animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Filter button active states */

/* Category filter active state */
.portfolio-category-filter.active {
  background: linear-gradient(to right, #3b82f6, #6366f1);
  color: white !important;
  box-shadow: 0 8px 20px rgba(99, 102, 241, 0.25);
}

/* Technology filter active state (same as category) */
.portfolio-tech-filter.active {
  background: linear-gradient(to right, #3b82f6, #6366f1);
  color: white !important;
  border-color: transparent !important;
  box-shadow: 0 6px 15px rgba(99, 102, 241, 0.25);
}

/* Selected filters pill */
.selected-filter {
  display: inline-flex;
  align-items: center;
  background: linear-gradient(to right, #3b82f6, #6366f1);
  color: white;
  font-size: 0.875rem;
  font-weight: 500;
  padding: 0.5rem 0.75rem;
  border-radius: 9999px;
  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.25);
}

.selected-filter button {
  margin-left: 0.5rem;
  font-size: 0.875rem;
  color: white;
  background: transparent;
}


  
  /* Custom scrollbar for technology filters */
  .overflow-y-auto::-webkit-scrollbar {
    width: 6px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 3px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
  
  /* Stats card hover effects */
  .bg-white\/10:hover {
    transform: translateY(-2px);
  }
</style>

<script>
  // Enhanced Portfolio filtering and interaction functionality
  document.addEventListener('DOMContentLoaded', function() {
    const allProjectsSection = document.getElementById('all-projects-section');
    if (!allProjectsSection) return;

    const searchInput = allProjectsSection.querySelector('#portfolio-search');
    const sortSelect = allProjectsSection.querySelector('#portfolio-sort');
    const categoryFilters = allProjectsSection.querySelectorAll('.portfolio-category-filter');
    const techFilters = allProjectsSection.querySelectorAll('.portfolio-tech-filter');
    const clearFiltersBtn = allProjectsSection.querySelector('#portfolio-clear-filters');
    const resultsCount = allProjectsSection.querySelector('#portfolio-results-count');
    const projectsGrid = allProjectsSection.querySelector('#projects-grid');

    let activeFilters = {
      category: 'All',
      technologies: [],
      search: '',
      sort: 'featured'
    };

    // Initialize
    initializePortfolio();
    
    function initializePortfolio() {
      console.log('🎨 Initializing portfolio page functionality...');
      
      setupEventListeners();
      applyFilters();
      setupIntersectionObserver();
      
      console.log('✅ Portfolio page initialized successfully');
    }
    
    function setupEventListeners() {
      // Search functionality with debouncing
      if (searchInput) {
        searchInput.addEventListener('input', debounce((e) => {
          activeFilters.search = e.target.value.toLowerCase();
          applyFilters();
        }, 300));
      }
      
      // Sort functionality
      if (sortSelect) {
        sortSelect.addEventListener('change', (e) => {
          activeFilters.sort = e.target.value;
          applyFilters();
        });
      }
      
      // Category filters
      categoryFilters.forEach(filter => {
        filter.addEventListener('click', () => {
          const category = filter.dataset.category;
          activeFilters.category = category;
          updateCategoryFilterUI(filter);
          applyFilters();
        });
      });
      
      // Technology filters
      techFilters.forEach(filter => {
        filter.addEventListener('click', () => {
          const tech = filter.dataset.tech;
          toggleTechnologyFilter(tech, filter);
          applyFilters();
        });
      });
      
      // Clear filters
      if (clearFiltersBtn) {
        clearFiltersBtn.addEventListener('click', clearAllFilters);
      }
      
      if (resetFiltersBtn) {
        resetFiltersBtn.addEventListener('click', clearAllFilters);
      }
    }
    
    function updateCategoryFilterUI(activeFilter) {
      categoryFilters.forEach(f => {
        f.classList.remove('active');
        f.className = f.className.replace(
          'bg-gradient-to-r from-blue-500 to-indigo-500 text-white shadow-lg',
          'bg-white text-gray-700 border border-gray-300 hover:border-blue-500 hover:text-blue-600 shadow-sm'
        );
      });
      
      activeFilter.classList.add('active');
      activeFilter.className = activeFilter.className.replace(
        'bg-white text-gray-700 border border-gray-300 hover:border-blue-500 hover:text-blue-600 shadow-sm',
        'bg-gradient-to-r from-blue-500 to-indigo-500 text-white shadow-lg'
      );
    }
    
    function toggleTechnologyFilter(tech, filterElement) {
      const index = activeFilters.technologies.indexOf(tech);

      if (index > -1) {
        // remove
        activeFilters.technologies.splice(index, 1);
        filterElement.classList.remove('active');
      } else {
        // add
        activeFilters.technologies.push(tech);
        filterElement.classList.add('active');
      }

      updateSelectedFiltersBar();
    }

    function updateSelectedFiltersBar() {
      const bar = document.getElementById('selected-filters-bar');
      if (!bar) return;

      // Clear the bar first
      bar.innerHTML = '';

      // If no active tech filters, hide the bar
      if (activeFilters.technologies.length === 0) {
        bar.classList.add('hidden');
        return;
      }

      // Style the bar container
      bar.className = [
        'mb-8',
        'flex flex-wrap items-center gap-3',
        'bg-gray-100 border border-gray-200',
        'rounded-xl p-4 shadow-sm',
      ].join(' ');

      // Add a pill for each active technology
      activeFilters.technologies.forEach((tech) => {
        const pill = document.createElement('div');
        pill.className = [
          'flex items-center gap-2',
          'px-4 py-2 rounded-full',
          'text-sm font-semibold text-white',
          'bg-gradient-to-r from-blue-500 to-indigo-500',
          'shadow-md hover:shadow-lg',
          'transition',
        ].join(' ');

        pill.innerHTML = `
          <span>${tech}</span>
          <button
            class="text-white text-lg leading-none hover:text-gray-200 transition"
            title="Remove filter"
          >
            &times;
          </button>
        `;

        // Handle remove button
        pill.querySelector('button').addEventListener('click', () => {
          // Remove from active filters
          activeFilters.technologies = activeFilters.technologies.filter(
            (t) => t !== tech
          );

          // Reset the corresponding button state
          const btn = document.querySelector(
            `.portfolio-tech-filter[data-tech="${tech}"]`
          );
          if (btn) {
            btn.classList.remove('active');
          }

          // Re-render bar and reapply filters
          updateSelectedFiltersBar();
          applyFilters();
        });

        bar.appendChild(pill);
      });
    }


    
    function applyFilters() {
      const allProjectsSection = document.getElementById('all-projects-section');
      if (!allProjectsSection) return;

      const projectCards = allProjectsSection.querySelectorAll('.project-card');
      let visibleCount = 0;

      projectCards.forEach(card => {
        const category = card.dataset.category;
        const technologies = card.dataset.technologies?.split(',') || [];
        const title = card.dataset.title?.toLowerCase() || '';
        const description = card.querySelector('p')?.textContent?.toLowerCase() || '';

        let isVisible = true;

        // Category filter
        if (activeFilters.category !== 'All' && category !== activeFilters.category) {
          isVisible = false;
        }

        // Technology filter
        if (activeFilters.technologies.length > 0) {
          const hasRequiredTech = activeFilters.technologies.some(tech =>
            technologies.some(cardTech =>
              cardTech.trim().toLowerCase().includes(tech.toLowerCase())
            )
          );
          if (!hasRequiredTech) isVisible = false;
        }

        // Search filter
        if (
          activeFilters.search &&
          !title.includes(activeFilters.search) &&
          !description.includes(activeFilters.search) &&
          !technologies.some(tech => tech.toLowerCase().includes(activeFilters.search))
        ) {
          isVisible = false;
        }

        // Show/hide card
        if (isVisible) {
          card.style.display = 'block';
          card.classList.remove('hidden');
          setTimeout(() => card.classList.add('animate-in'), 50);
          visibleCount++;
        } else {
          card.classList.remove('animate-in');
          card.classList.add('hidden');
          setTimeout(() => (card.style.display = 'none'), 300);
        }
      });

      // Update results count
      if (resultsCount) resultsCount.textContent = visibleCount;

      // Show/hide no results
      updateNoResultsDisplay(visibleCount);

      // Clear filters button
      updateClearFiltersButton();

      // Sorting
      applySorting();
    }

    
    function updateNoResultsDisplay(visibleCount) {
      const noResults = document.getElementById('portfolio-no-results');
      const projectsContainer = document.querySelector('.portfolio-projects-container');
      
      if (noResults) {
        if (visibleCount === 0) {
          noResults.classList.remove('hidden');
          if (projectsContainer) {
            projectsContainer.style.opacity = '0.3';
          }
        } else {
          noResults.classList.add('hidden');
          if (projectsContainer) {
            projectsContainer.style.opacity = '1';
          }
        }
      }
    }
    
    function updateClearFiltersButton() {
      const hasActiveFilters = 
        activeFilters.category !== 'All' || 
        activeFilters.technologies.length > 0 || 
        activeFilters.search !== '';
        
      if (clearFiltersBtn) {
        if (hasActiveFilters) {
          clearFiltersBtn.classList.remove('hidden');
        } else {
          clearFiltersBtn.classList.add('hidden');
        }
      }
    }
    
    function clearAllFilters() {
      // Reset search
      if (searchInput) {
        searchInput.value = '';
      }
      
      // Reset sort
      if (sortSelect) {
        sortSelect.value = 'featured';
      }
      
      // Reset category filters
      categoryFilters.forEach((filter, index) => {
        if (index === 0) {
          filter.classList.add('active');
          filter.className = filter.className.replace(
            'bg-white text-gray-700 border border-gray-300 hover:border-blue-500 hover:text-blue-600 shadow-sm',
            'bg-gradient-to-r from-blue-500 to-indigo-500 text-white shadow-lg'
          );
        } else {
          filter.classList.remove('active');
          filter.className = filter.className.replace(
            'bg-gradient-to-r from-blue-500 to-indigo-500 text-white shadow-lg',
            'bg-white text-gray-700 border border-gray-300 hover:border-blue-500 hover:text-blue-600 shadow-sm'
          );
        }
      });
      
      // Reset technology filters
      techFilters.forEach(filter => {
        filter.classList.remove('active');
      });
      
      // Reset active filters
      activeFilters = {
        category: 'All',
        technologies: [],
        search: '',
        sort: 'featured'
      };
      
      // Apply filters
      applyFilters();
    }
    
    function applySorting() {
      const projectsGrid = document.querySelector('#all-projects-section #projects-grid');
      const projectCards = Array.from(
        document.querySelectorAll('#all-projects-section .project-card:not(.hidden)')
      );

      if (!projectsGrid || projectCards.length === 0) return;

      projectCards.sort((a, b) => {
        switch (activeFilters.sort) {
          case 'newest':
            return parseInt(b.dataset.year) - parseInt(a.dataset.year);
          case 'oldest':
            return parseInt(a.dataset.year) - parseInt(b.dataset.year);
          case 'alphabetical':
            return a.dataset.title.localeCompare(b.dataset.title);
          case 'live-first':
            if (a.dataset.status === 'live' && b.dataset.status !== 'live') return -1;
            if (a.dataset.status !== 'live' && b.dataset.status === 'live') return 1;
            return parseInt(b.dataset.year) - parseInt(a.dataset.year);
          case 'featured':
          default:
            const aFeatured = a.dataset.featured === 'true';
            const bFeatured = b.dataset.featured === 'true';
            if (aFeatured && !bFeatured) return -1;
            if (!aFeatured && bFeatured) return 1;
            return parseInt(b.dataset.year) - parseInt(a.dataset.year);
        }
      });

      // Reorder DOM
      projectCards.forEach(card => projectsGrid.appendChild(card));
    }

    
    function setupIntersectionObserver() {
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -100px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
          }
        });
      }, observerOptions);
      
      // Observe all elements with animate-on-scroll class
      document.querySelectorAll('.animate-on-scroll').forEach(el => {
        observer.observe(el);
      });
    }
    
    // Utility function for debouncing
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }
  });
</script>