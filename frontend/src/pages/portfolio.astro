---
// src/pages/portfolio.astro
/**
 * Complete portfolio page with detailed project showcase
 */

 import Layout from '../layouts/Layout.astro'
import { ALL_PROJECTS, PROJECT_CATEGORIES, LIVE_PROJECTS, CV_PROJECTS } from '../utils/projects'
import TechIcon from '../components/decor/TechIcon.astro'

const pageTitle = 'Portfolio - Python Development Projects & Case Studies'
const pageDescription = 'Explore Harry Sibbenga\'s Python development portfolio featuring web applications, data processing systems, real-time solutions, and enterprise projects with detailed case studies.'
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  canonical="/portfolio"
>
  <!-- Hero Section -->
  <section class="py-20 bg-gradient-to-br from-slate-900 via-gray-900 to-indigo-900 text-white relative overflow-hidden">
    <!-- Background Tech Icons -->
    <div aria-hidden="true" class="absolute inset-0 overflow-hidden opacity-10">
      <TechIcon 
        tech="python" 
        size="xl"
        position={{ top: "8%", left: "5%" }} 
        animation="float"
        delay={0.5}
        opacity={0.15}
        blur={true}
      />
      <TechIcon 
        tech="django" 
        size="large"
        position={{ top: "20%", right: "8%" }} 
        animation="pulse"
        delay={1.2}
        opacity={0.12}
        blur={true}
      />
      <TechIcon 
        tech="vue" 
        size="xl"
        position={{ bottom: "15%", left: "10%" }} 
        animation="rotate"
        delay={2.0}
        opacity={0.15}
        blur={true}
      />
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
      <div class="text-center animate-on-scroll">
        <h1 class="text-5xl lg:text-6xl font-black mb-6 leading-tight">
          Project
          <span class="block bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
            Portfolio
          </span>
        </h1>
        
        <p class="text-xl text-blue-100 mb-12 max-w-4xl mx-auto leading-relaxed">
          Explore my Python development projects spanning web applications, data processing systems, 
          real-time solutions, and enterprise software across various industries.
        </p>

        <!-- Portfolio Stats -->
        <div class="grid md:grid-cols-4 gap-8 max-w-4xl mx-auto">
          <div class="text-center">
            <div class="text-3xl font-bold text-cyan-400 mb-2">{ALL_PROJECTS.length}</div>
            <div class="text-blue-200 text-sm">Total Projects</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-green-400 mb-2">{LIVE_PROJECTS.length}</div>
            <div class="text-blue-200 text-sm">Live Projects</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-purple-400 mb-2">{CV_PROJECTS.length}</div>
            <div class="text-blue-200 text-sm">Enterprise Projects</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-yellow-400 mb-2">5+</div>
            <div class="text-blue-200 text-sm">Industries Served</div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Filter Section -->
  <section class="py-12 bg-white border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex flex-wrap justify-center gap-3 animate-on-scroll">
        {PROJECT_CATEGORIES.map((category, index) => (
          <button
            type="button"
            class={`filter-btn px-6 py-3 rounded-full font-medium transition-all duration-300 ${
              index === 0 
                ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white' 
                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
            }`}
            data-filter={category}
            aria-pressed={index === 0 ? 'true' : 'false'}
          >
            {category}
          </button>
        ))}
      </div>
    </div>
  </section>

  <!-- Projects Grid -->
  <section class="py-20 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div id="projects-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {ALL_PROJECTS.map((project, index) => (
          <article 
            class="project-card bg-white rounded-2xl shadow-lg border border-gray-200 overflow-hidden hover:shadow-2xl transition-all duration-500 animate-on-scroll"
            style={`animation-delay: ${index * 100}ms`}
            data-category={project.category}
            data-status={project.status}
          >
            <!-- Project Image -->
            <div class="relative aspect-[16/10] overflow-hidden">
              <img
                src={project.image}
                alt={project.title}
                loading="lazy"
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
              />
              
              <!-- Status Badge -->
              <div class="absolute top-4 left-4">
                {project.status === 'live' ? (
                  <div class="flex items-center px-3 py-1 bg-green-600/90 backdrop-blur-sm rounded-full text-sm font-medium text-white">
                    <div class="w-2 h-2 bg-green-300 rounded-full mr-2 animate-pulse"></div>
                    Live Project
                  </div>
                ) : (
                  <div class="flex items-center px-3 py-1 bg-blue-600/90 backdrop-blur-sm rounded-full text-sm font-medium text-white">
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
                    </svg>
                    Case Study
                  </div>
                )}
              </div>

              <!-- Year Badge -->
              <div class="absolute top-4 right-4 px-2 py-1 bg-gray-900/80 backdrop-blur-sm rounded text-sm font-medium text-white">
                {project.year}
              </div>
            </div>

            <!-- Project Content -->
            <div class="p-6">
              <!-- Category -->
              <div class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-semibold mb-3">
                {project.category}
              </div>

              <!-- Title -->
              <h3 class="text-xl font-bold text-gray-900 mb-3 line-clamp-2">
                {project.title}
              </h3>

              <!-- Description -->
              <p class="text-gray-600 mb-4 line-clamp-3">
                {project.description}
              </p>

              <!-- Client Info (if available) -->
              {project.client && (
                <div class="flex items-center mb-4 text-sm text-gray-500">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h4M9 7h6m-6 4h6m-6 4h6"/>
                  </svg>
                  <span>{project.client}</span>
                </div>
              )}

              <!-- Technology Stack -->
              <div class="mb-6">
                <div class="flex flex-wrap gap-2">
                  {project.technologies.slice(0, 3).map((tech) => (
                    <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs font-medium">
                      {tech}
                    </span>
                  ))}
                  {project.technologies.length > 3 && (
                    <span class="px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs">
                      +{project.technologies.length - 3} more
                    </span>
                  )}
                </div>
              </div>

              <!-- Key Results Preview -->
              <div class="mb-6">
                <h4 class="text-sm font-semibold text-gray-700 mb-2">Key Achievement</h4>
                <p class="text-sm text-gray-600">
                  {project.results[0]}
                </p>
              </div>

              <!-- Project Actions -->
              <div class="flex gap-3">
                {project.status === 'live' ? (
                  <>
                    {project.liveUrl && (
                      <a
                        href={project.liveUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="flex-1 inline-flex items-center justify-center px-4 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl font-semibold hover:from-green-600 hover:to-green-700 transition-all duration-300"
                      >
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                        </svg>
                        View Live
                      </a>
                    )}
                    {project.githubUrl && (
                      <a
                        href={project.githubUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="px-4 py-3 border border-gray-300 text-gray-700 rounded-xl font-semibold hover:border-gray-400 hover:text-gray-900 transition-all duration-300"
                        aria-label="View source code"
                      >
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                      </a>
                    )}
                  </>
                ) : (
                  <a
                    href="/contact"
                    class="flex-1 inline-flex items-center justify-center px-4 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl font-semibold hover:from-blue-700 hover:to-purple-700 transition-all duration-300"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
                    </svg>
                    Discuss Similar Project
                  </a>
                )}
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>

  <!-- Case Study Deep Dive -->
  <section class="py-20 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16 animate-on-scroll">
        <h2 class="text-4xl font-bold text-gray-900 mb-6">
          Featured Case Study
        </h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          Deep dive into a complex enterprise project showcasing problem-solving approach and technical expertise.
        </p>
      </div>

      <!-- MapAction Case Study -->
      <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-3xl p-8 lg:p-12 animate-on-scroll">
        <div class="grid lg:grid-cols-2 gap-12 items-center">
          <!-- Left Content -->
          <div>
            <div class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-full text-sm font-semibold mb-6">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0 9c-1.657 0-3-4.03-3-9s1.343-9 3-9m0 9c1.657 0 3-4.03 3-9s-1.343-9-3-9"/>
              </svg>
              Humanitarian Technology
            </div>
            
            <h3 class="text-3xl font-bold text-gray-900 mb-4">
              MapAction Geospatial Pipeline
            </h3>
            
            <p class="text-lg text-gray-600 mb-6">
              Revolutionizing humanitarian crisis response through automated geospatial data processing, 
              reducing data preparation time from hours to under 60 minutes.
            </p>

            <!-- Problem Statement -->
            <div class="mb-6">
              <h4 class="text-lg font-semibold text-gray-900 mb-3">🎯 The Challenge</h4>
              <p class="text-gray-600">
                MapAction needed to drastically reduce geospatial data processing time to enable 
                faster humanitarian response during natural disasters and emergencies.
              </p>
            </div>

            <!-- Solution -->
            <div class="mb-6">
              <h4 class="text-lg font-semibold text-gray-900 mb-3">⚡ The Solution</h4>
              <ul class="space-y-2 text-gray-600">
                <li class="flex items-start">
                  <svg class="w-5 h-5 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                  Automated Python data processing workflows
                </li>
                <li class="flex items-start">
                  <svg class="w-5 h-5 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                  Docker containerization for consistent deployment
                </li>
                <li class="flex items-start">
                  <svg class="w-5 h-5 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                  CI/CD pipeline with Jenkins for reliable updates
                </li>
                <li class="flex items-start">
                  <svg class="w-5 h-5 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                  Comprehensive testing with pytest framework
                </li>
              </ul>
            </div>

            <!-- Results -->
            <div class="bg-white rounded-xl p-6 border border-blue-200">
              <h4 class="text-lg font-semibold text-gray-900 mb-3">🏆 Impact</h4>
              <div class="grid grid-cols-2 gap-4">
                <div class="text-center">
                  <div class="text-2xl font-bold text-blue-600">20%</div>
                  <div class="text-sm text-gray-600">Faster Processing</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-green-600">&lt;1hr</div>
                  <div class="text-sm text-gray-600">Data Access Time</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Right Content - Technical Details -->
          <div>
            <div class="bg-gray-900 rounded-2xl p-6 text-white">
              <div class="flex items-center justify-between mb-4">
                <div class="flex items-center space-x-2">
                  <div class="w-3 h-3 bg-red-400 rounded-full"></div>
                  <div class="w-3 h-3 bg-yellow-400 rounded-full"></div>
                  <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                </div>
                <div class="text-gray-400 text-sm">pipeline_processor.py</div>
              </div>
              
              <div class="font-mono text-sm space-y-2">
                <div class="text-gray-500"># Automated geospatial data processing</div>
                <div><span class="text-purple-400">class</span> <span class="text-blue-400">GeospatialPipeline</span>:</div>
                <div class="ml-4">
                  <div><span class="text-blue-400">def</span> <span class="text-yellow-400">process_crisis_data</span>(self, region):</div>
                  <div class="ml-4 text-gray-300">
                    <div>data = self.fetch_satellite_imagery(region)</div>
                    <div>processed = self.apply_ml_analysis(data)</div>
                    <div>self.generate_emergency_maps(processed)</div>
                    <div><span class="text-purple-400">return</span> processed</div>
                  </div>
                </div>
                <div class="text-gray-500 mt-4"># 60 minutes → 48 minutes average</div>
              </div>
            </div>

            <div class="mt-6 grid grid-cols-2 gap-4">
              <div class="bg-white rounded-xl p-4 border border-gray-200">
                <h5 class="font-semibold text-gray-900 mb-2">Technologies Used</h5>
                <div class="flex flex-wrap gap-2">
                  <span class="px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs">Python</span>
                  <span class="px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs">Docker</span>
                  <span class="px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs">Jenkins</span>
                  <span class="px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs">pytest</span>
                </div>
              </div>
              
              <div class="bg-white rounded-xl p-4 border border-gray-200">
                <h5 class="font-semibold text-gray-900 mb-2">Project Duration</h5>
                <div class="text-2xl font-bold text-gray-900">Ongoing</div>
                <div class="text-sm text-gray-600">Since Jan 2024</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Call to Action -->
  <section class="py-20 bg-gradient-to-br from-blue-600 to-purple-600 text-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center animate-on-scroll">
      <h2 class="text-4xl font-bold mb-6">Ready to Build Your Next Project?</h2>
      <p class="text-xl text-blue-100 mb-8 leading-relaxed">
        Whether you need a simple web application or a complex enterprise system, 
        I have the experience to deliver exceptional results.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a
          href="/contact"
          class="inline-flex items-center px-8 py-4 bg-white text-blue-600 rounded-xl font-semibold hover:bg-blue-50 transition-colors duration-300"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
          </svg>
          Discuss Your Project
        </a>
        
        <a
          href="/services"
          class="inline-flex items-center px-8 py-4 border-2 border-white text-white rounded-xl font-semibold hover:bg-white hover:text-blue-600 transition-all duration-300"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
          </svg>
          View Services
        </a>
      </div>
    </div>
  </section>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .filter-btn.active {
    background: linear-gradient(to right, #2563eb, #8b5cf6);
    color: white;
  }
  
  .project-card.hidden {
    display: none;
  }
  
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease-out;
  }
  
  .animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
    // Portfolio filtering and animations
    document.addEventListener('DOMContentLoaded', () => {
      // Filter functionality
      const filterButtons = document.querySelectorAll('.filter-btn')
      const projectCards = document.querySelectorAll('.project-card')
      
      const filterProjects = (category) => {
        projectCards.forEach((card) => {
          const cardCategory = card.getAttribute('data-category')
          const shouldShow = category === 'All' || cardCategory === category
          
          if (shouldShow) {
            card.classList.remove('hidden')
          } else {
            card.classList.add('hidden')
          }
        })
      }
      
      filterButtons.forEach((button) => {
        button.addEventListener('click', () => {
          const category = button.getAttribute('data-filter')
          
          // Update active button
          filterButtons.forEach((btn) => {
            btn.classList.remove('active')
            btn.setAttribute('aria-pressed', 'false')
            btn.className = btn.className.replace(
              'bg-gradient-to-r from-blue-600 to-purple-600 text-white',
              'bg-gray-100 text-gray-700 hover:bg-gray-200'
            )
          })
          
          button.classList.add('active')
          button.setAttribute('aria-pressed', 'true')
          button.className = button.className.replace(
            'bg-gray-100 text-gray-700 hover:bg-gray-200',
            'bg-gradient-to-r from-blue-600 to-purple-600 text-white'
          )
          
          // Filter projects
          filterProjects(category)
        })
      })
      
      // Animation observer
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in')
          }
        })
      }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      })
      
      document.querySelectorAll('.animate-on-scroll').forEach((el) => {
        observer.observe(el)
      })
      
      // Initialize with 'All' filter
      filterProjects('All')
    })
  </script>