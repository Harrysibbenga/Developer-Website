---
// src/pages/portfolio.astro
import Layout from '../layouts/Layout.astro'
import ProjectGallery from '../components/sections/ProjectGallery.astro'
import { BUSINESS_INFO } from '../utils/constants'
import { LIVE_PROJECTS, CV_PROJECTS } from '../utils/projects'

const pageTitle = 'Portfolio'
const pageDescription = `Explore ${BUSINESS_INFO.name}'s portfolio of web development projects, featuring modern websites, web applications, and digital solutions.`

// Combine and sort projects
const allProjects = [...LIVE_PROJECTS, ...CV_PROJECTS].sort((a, b) => {
  // Featured projects first, then by year (newest first)
  if (a.featured && !b.featured) return -1
  if (!a.featured && b.featured) return 1
  return b.year - a.year
})

// Get unique categories for filtering
const categories = ['All', ...new Set(allProjects.map(project => project.category))]

// Get unique technologies for filtering
const technologies = [...new Set(allProjects.flatMap(project => project.technologies))].sort()
---

<Layout title={pageTitle} description={pageDescription}>
  <main class="min-h-screen bg-gray-50">
    
    <!-- Header Section -->
    <section class="bg-gradient-to-br from-gray-900 via-blue-900 to-indigo-900 text-white py-20">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">
            Portfolio
          </h1>
          <p class="text-xl md:text-2xl text-gray-300 max-w-3xl mx-auto mb-8">
            Showcasing innovative web solutions and digital experiences
          </p>
          <div class="flex flex-wrap justify-center gap-4 text-sm">
            <span class="px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              {allProjects.length} Projects
            </span>
            <span class="px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              {LIVE_PROJECTS.length} Live Sites
            </span>
            <span class="px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              {technologies.length}+ Technologies
            </span>
          </div>
        </div>
      </div>
    </section>

    <!-- Filter Controls -->
    <section class="py-12 bg-white border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Category Filters -->
        <div class="mb-8">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">Filter by Category</h3>
          <div class="flex flex-wrap gap-2">
            {categories.map((category) => (
              <button 
                class="portfolio-filter-category px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:border-blue-500 hover:text-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                data-category={category}
                data-active={category === 'All'}
              >
                {category}
              </button>
            ))}
          </div>
        </div>

        <!-- Technology Filters -->
        <div class="mb-8">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">Filter by Technology</h3>
          <div class="flex flex-wrap gap-2 max-h-32 overflow-y-auto">
            {technologies.slice(0, 20).map((tech) => (
              <button 
                class="portfolio-filter-tech px-3 py-1 text-sm rounded-full border border-gray-300 text-gray-600 hover:border-blue-500 hover:text-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                data-tech={tech}
              >
                {tech}
              </button>
            ))}
            {technologies.length > 20 && (
              <span class="px-3 py-1 text-sm text-gray-500">
                +{technologies.length - 20} more...
              </span>
            )}
          </div>
        </div>

        <!-- Search and Sort -->
        <div class="flex flex-col sm:flex-row gap-4 items-center justify-between">
          <div class="relative flex-1 max-w-md">
            <input 
              type="text" 
              id="project-search"
              placeholder="Search projects..."
              class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
            <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
          
          <div class="flex gap-2">
            <select 
              id="project-sort" 
              class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="featured">Featured First</option>
              <option value="newest">Newest First</option>
              <option value="oldest">Oldest First</option>
              <option value="alphabetical">A-Z</option>
            </select>
            
            <button 
              id="view-toggle"
              class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500"
              title="Toggle view"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"/>
              </svg>
            </button>
          </div>
        </div>

        <!-- Results Info -->
        <div class="mt-4 text-sm text-gray-600">
          <span id="results-count">{allProjects.length}</span> projects found
        </div>
      </div>
    </section>

    <!-- Projects Grid -->
    <section class="py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Featured Projects Section -->
        <div class="mb-16">
          <h2 class="text-3xl font-bold text-gray-900 mb-2">Featured Projects</h2>
          <p class="text-gray-600 mb-8">Highlighting our most impactful and innovative work</p>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8" id="featured-projects">
            {allProjects.filter(project => project.featured).map((project) => (
              <div 
                class="portfolio-item group bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 overflow-hidden"
                data-category={project.category}
                data-technologies={project.technologies.join(',')}
                data-year={project.year}
                data-title={project.title.toLowerCase()}
                data-featured="true"
              >
                <!-- Project Image -->
                <div class="relative h-64 overflow-hidden">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                    loading="lazy"
                  />
                  
                  <!-- Status Badge -->
                  <div class="absolute top-4 left-4">
                    {project.status === 'live' ? (
                      <div class="flex items-center px-3 py-1 bg-green-600/90 backdrop-blur-sm rounded-full text-white text-sm font-medium">
                        <div class="w-2 h-2 bg-green-300 rounded-full mr-2 animate-pulse"></div>
                        Live Project
                      </div>
                    ) : (
                      <div class="flex items-center px-3 py-1 bg-blue-600/90 backdrop-blur-sm rounded-full text-white text-sm font-medium">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
                        </svg>
                        Case Study
                      </div>
                    )}
                  </div>

                  <!-- Featured Badge -->
                  <div class="absolute top-4 right-4">
                    <div class="px-2 py-1 bg-yellow-500/90 backdrop-blur-sm rounded text-white text-xs font-bold">
                      ‚≠ê FEATURED
                    </div>
                  </div>

                  <!-- Year Badge -->
                  <div class="absolute bottom-4 right-4 px-2 py-1 bg-gray-900/80 backdrop-blur-sm rounded text-white text-sm font-medium">
                    {project.year}
                  </div>

                  <!-- Overlay -->
                  <div class="absolute inset-0 bg-gradient-to-t from-gray-900/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                </div>

                <!-- Project Content -->
                <div class="p-8">
                  <!-- Project Title -->
                  <h3 class="text-2xl font-bold mb-3 text-gray-900 group-hover:text-blue-600 transition-colors">
                    {project.title}
                  </h3>

                  <!-- Description -->
                  <p class="text-gray-600 text-lg leading-relaxed mb-6">
                    {project.description}
                  </p>

                  <!-- Client Info (if available) -->
                  {project.client && (
                    <div class="flex items-center mb-4 text-sm text-gray-500">
                      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h4M9 7h6m-6 4h6m-6 4h6"/>
                      </svg>
                      <span>Client: {project.client}</span>
                    </div>
                  )}

                  <!-- Technology Stack -->
                  <div class="mb-6">
                    <h4 class="text-sm font-semibold text-gray-500 mb-3 uppercase tracking-wide">
                      Technologies Used
                    </h4>
                    <div class="flex flex-wrap gap-2">
                      {project.technologies.slice(0, 6).map((tech) => (
                        <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-blue-100 hover:text-blue-700 transition-colors cursor-default">
                          {tech}
                        </span>
                      ))}
                      {project.technologies.length > 6 && (
                        <span class="px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                          +{project.technologies.length - 6} more
                        </span>
                      )}
                    </div>
                  </div>

                  <!-- Key Results -->
                  <div class="mb-6">
                    <h4 class="text-sm font-semibold text-gray-500 mb-3 uppercase tracking-wide">
                      Key Results
                    </h4>
                    <ul class="space-y-2">
                      {project.results.slice(0, 3).map((result) => (
                        <li class="flex items-start text-sm text-gray-600">
                          <svg class="w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                          </svg>
                          <span>{result}</span>
                        </li>
                      ))}
                    </ul>
                  </div>

                  <!-- Project Actions -->
                  <div class="flex gap-3">
                    {project.status === 'live' ? (
                      <>
                        {project.liveUrl && (
                          <a
                            href={project.liveUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="flex-1 inline-flex items-center justify-center px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl font-semibold hover:from-green-600 hover:to-green-700 transition-all duration-300 group/btn"
                          >
                            <svg class="w-5 h-5 mr-2 group-hover/btn:scale-110 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                            </svg>
                            View Live Site
                          </a>
                        )}
                        {project.githubUrl && (
                          <a
                            href={project.githubUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="px-6 py-3 border border-gray-300 text-gray-700 rounded-xl font-semibold hover:border-gray-400 hover:text-gray-900 transition-all duration-300"
                          >
                            <svg class="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 24 24">
                              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                            </svg>
                            Code
                          </a>
                        )}
                      </>
                    ) : (
                      <button class="flex-1 px-6 py-3 bg-gradient-to-r from-blue-500 to-indigo-500 text-white rounded-xl font-semibold hover:from-blue-600 hover:to-indigo-600 transition-all duration-300">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
                        </svg>
                        Discuss Project
                      </button>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- All Projects Section -->
        <div>
          <h2 class="text-3xl font-bold text-gray-900 mb-2">All Projects</h2>
          <p class="text-gray-600 mb-8">Complete portfolio of development work and case studies</p>
          
          <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8" id="all-projects">
            {allProjects.map((project) => (
              <div 
                class="portfolio-item group bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden"
                data-category={project.category}
                data-technologies={project.technologies.join(',')}
                data-year={project.year}
                data-title={project.title.toLowerCase()}
                data-featured={project.featured}
              >
                <!-- Project Image -->
                <div class="relative h-48 overflow-hidden">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    loading="lazy"
                  />
                  
                  <!-- Status Badge -->
                  <div class="absolute top-3 left-3">
                    {project.status === 'live' ? (
                      <div class="flex items-center px-2 py-1 bg-green-600/90 backdrop-blur-sm rounded-full text-white text-xs font-medium">
                        <div class="w-1.5 h-1.5 bg-green-300 rounded-full mr-1 animate-pulse"></div>
                        Live
                      </div>
                    ) : (
                      <div class="px-2 py-1 bg-blue-600/90 backdrop-blur-sm rounded-full text-white text-xs font-medium">
                        Case Study
                      </div>
                    )}
                  </div>

                  <!-- Featured Badge -->
                  {project.featured && (
                    <div class="absolute top-3 right-3">
                      <div class="px-2 py-1 bg-yellow-500/90 backdrop-blur-sm rounded text-white text-xs font-bold">
                        ‚≠ê
                      </div>
                    </div>
                  )}

                  <!-- Year Badge -->
                  <div class="absolute bottom-3 right-3 px-2 py-1 bg-gray-900/80 backdrop-blur-sm rounded text-white text-xs">
                    {project.year}
                  </div>
                </div>

                <!-- Project Content -->
                <div class="p-6">
                  <!-- Project Title -->
                  <h3 class="text-xl font-bold mb-2 text-gray-900 group-hover:text-blue-600 transition-colors line-clamp-2">
                    {project.title}
                  </h3>

                  <!-- Category -->
                  <div class="text-sm text-blue-600 font-medium mb-3">
                    {project.category}
                  </div>

                  <!-- Description -->
                  <p class="text-gray-600 text-sm leading-relaxed mb-4 line-clamp-3">
                    {project.description}
                  </p>

                  <!-- Technology Stack Preview -->
                  <div class="mb-4">
                    <div class="flex flex-wrap gap-1">
                      {project.technologies.slice(0, 3).map((tech) => (
                        <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs font-medium">
                          {tech}
                        </span>
                      ))}
                      {project.technologies.length > 3 && (
                        <span class="px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs">
                          +{project.technologies.length - 3}
                        </span>
                      )}
                    </div>
                  </div>

                  <!-- Key Achievement -->
                  <div class="mb-4">
                    <p class="text-sm text-gray-600 italic">
                      "{project.results[0]}"
                    </p>
                  </div>

                  <!-- Project Actions -->
                  <div class="flex gap-2">
                    {project.status === 'live' ? (
                      <>
                        {project.liveUrl && (
                          <a
                            href={project.liveUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="flex-1 inline-flex items-center justify-center px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg text-sm font-semibold hover:from-green-600 hover:to-green-700 transition-all duration-300"
                          >
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                            </svg>
                            View Live
                          </a>
                        )}
                        {project.githubUrl && (
                          <a
                            href={project.githubUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg text-sm font-semibold hover:border-gray-400 hover:text-gray-900 transition-all duration-300"
                          >
                            Code
                          </a>
                        )}
                      </>
                    ) : (
                      <button class="flex-1 px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-500 text-white rounded-lg text-sm font-semibold hover:from-blue-600 hover:to-indigo-600 transition-all duration-300">
                        Discuss
                      </button>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- No Results Message -->
        <div id="no-results" class="hidden text-center py-16">
          <div class="max-w-md mx-auto">
            <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.29-1.009-5.824-2.412M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"/>
            </svg>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">No projects found</h3>
            <p class="text-gray-600 mb-4">Try adjusting your filters or search terms</p>
            <button 
              id="clear-filters"
              class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Clear All Filters
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="bg-gradient-to-r from-blue-600 to-indigo-600 text-white py-16">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-4">
          Ready to Start Your Project?
        </h2>
        <p class="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">
          Let's discuss how we can bring your vision to life with modern web technologies and innovative solutions.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="/contact" 
            class="inline-flex items-center px-8 py-4 bg-white text-blue-600 rounded-xl font-semibold hover:bg-gray-50 transition-all duration-300 group"
          >
            <svg class="w-5 h-5 mr-2 group-hover:scale-110 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
            </svg>
            Start a Conversation
          </a>
          <a 
            href="/services" 
            class="inline-flex items-center px-8 py-4 border border-white/30 text-white rounded-xl font-semibold hover:bg-white/10 transition-all duration-300"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h4M9 7h6m-6 4h6m-6 4h6"/>
            </svg>
            View Services
          </a>
        </div>
      </div>
    </section>

  </main>
</Layout>

<script>
  // Portfolio filtering and search functionality
  document.addEventListener('DOMContentLoaded', function() {
    const projectItems = document.querySelectorAll('.portfolio-item');
    const categoryFilters = document.querySelectorAll('.portfolio-filter-category');
    const techFilters = document.querySelectorAll('.portfolio-filter-tech');
    const searchInput = document.getElementById('project-search');
    const sortSelect = document.getElementById('project-sort');
    const viewToggle = document.getElementById('view-toggle');
    const resultsCount = document.getElementById('results-count');
    const noResults = document.getElementById('no-results');
    const clearFilters = document.getElementById('clear-filters');
    
    let activeFilters = {
      category: 'All',
      technologies: [],
      search: '',
      sort: 'featured'
    };

    // Initialize
    updateActiveFilters();
    
    // Category filtering
    categoryFilters.forEach(filter => {
      filter.addEventListener('click', function() {
        const category = this.dataset.category;
        activeFilters.category = category;
        
        // Update active state
        categoryFilters.forEach(f => {
          f.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
          f.classList.add('border-gray-300', 'text-gray-700');
        });
        this.classList.remove('border-gray-300', 'text-gray-700');
        this.classList.add('bg-blue-600', 'text-white', 'border-blue-600');
        
        filterProjects();
      });
    });
    
    // Technology filtering
    techFilters.forEach(filter => {
      filter.addEventListener('click', function() {
        const tech = this.dataset.tech;
        const index = activeFilters.technologies.indexOf(tech);
        
        if (index > -1) {
          // Remove technology
          activeFilters.technologies.splice(index, 1);
          this.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
          this.classList.add('border-gray-300', 'text-gray-600');
        } else {
          // Add technology
          activeFilters.technologies.push(tech);
          this.classList.remove('border-gray-300', 'text-gray-600');
          this.classList.add('bg-blue-600', 'text-white', 'border-blue-600');
        }
        
        filterProjects();
      });
    });
    
    // Search functionality
    searchInput.addEventListener('input', function() {
      activeFilters.search = this.value.toLowerCase();
      filterProjects();
    });
    
    // Sort functionality
    sortSelect.addEventListener('change', function() {
      activeFilters.sort = this.value;
      filterProjects();
    });
    
    // View toggle (grid/list view)
    viewToggle.addEventListener('click', function() {
      const allProjectsGrid = document.getElementById('all-projects');
      const currentClasses = allProjectsGrid.className;
      
      if (currentClasses.includes('xl:grid-cols-3')) {
        // Switch to list view
        allProjectsGrid.className = currentClasses.replace('md:grid-cols-2 xl:grid-cols-3', 'grid-cols-1');
        this.innerHTML = '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"/></svg>';
        this.title = 'Grid view';
      } else {
        // Switch to grid view
        allProjectsGrid.className = currentClasses.replace('grid-cols-1', 'md:grid-cols-2 xl:grid-cols-3');
        this.innerHTML = '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"/></svg>';
        this.title = 'List view';
      }
    });
    
    // Clear all filters
    clearFilters.addEventListener('click', function() {
      activeFilters = {
        category: 'All',
        technologies: [],
        search: '',
        sort: 'featured'
      };
      
      // Reset UI
      searchInput.value = '';
      sortSelect.value = 'featured';
      
      categoryFilters.forEach(f => {
        f.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
        f.classList.add('border-gray-300', 'text-gray-700');
      });
      categoryFilters[0].classList.remove('border-gray-300', 'text-gray-700');
      categoryFilters[0].classList.add('bg-blue-600', 'text-white', 'border-blue-600');
      
      techFilters.forEach(f => {
        f.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
        f.classList.add('border-gray-300', 'text-gray-600');
      });
      
      filterProjects();
    });
    
    function filterProjects() {
      let visibleCount = 0;
      const projectsArray = Array.from(projectItems);
      
      // Filter projects
      projectsArray.forEach(item => {
        const category = item.dataset.category;
        const technologies = item.dataset.technologies.split(',');
        const title = item.dataset.title;
        const year = parseInt(item.dataset.year);
        const featured = item.dataset.featured === 'true';
        
        let isVisible = true;
        
        // Category filter
        if (activeFilters.category !== 'All' && category !== activeFilters.category) {
          isVisible = false;
        }
        
        // Technology filter
        if (activeFilters.technologies.length > 0) {
          const hasRequiredTech = activeFilters.technologies.some(tech => 
            technologies.includes(tech)
          );
          if (!hasRequiredTech) {
            isVisible = false;
          }
        }
        
        // Search filter
        if (activeFilters.search && !title.includes(activeFilters.search)) {
          isVisible = false;
        }
        
        if (isVisible) {
          item.style.display = 'block';
          visibleCount++;
        } else {
          item.style.display = 'none';
        }
      });
      
      // Sort visible projects
      const visibleProjects = projectsArray.filter(item => item.style.display !== 'none');
      sortProjects(visibleProjects);
      
      // Update results count
      resultsCount.textContent = visibleCount;
      
      // Show/hide no results message
      if (visibleCount === 0) {
        noResults.classList.remove('hidden');
      } else {
        noResults.classList.add('hidden');
      }
    }
    
    function sortProjects(projects) {
      const containers = [
        document.getElementById('featured-projects'),
        document.getElementById('all-projects')
      ];
      
      projects.sort((a, b) => {
        const aYear = parseInt(a.dataset.year);
        const bYear = parseInt(b.dataset.year);
        const aFeatured = a.dataset.featured === 'true';
        const bFeatured = b.dataset.featured === 'true';
        const aTitle = a.dataset.title;
        const bTitle = b.dataset.title;
        
        switch (activeFilters.sort) {
          case 'featured':
            if (aFeatured && !bFeatured) return -1;
            if (!aFeatured && bFeatured) return 1;
            return bYear - aYear; // Then by newest
            
          case 'newest':
            return bYear - aYear;
            
          case 'oldest':
            return aYear - bYear;
            
          case 'alphabetical':
            return aTitle.localeCompare(bTitle);
            
          default:
            return 0;
        }
      });
      
      // Re-append projects in sorted order
      projects.forEach(project => {
        const isFeatured = project.dataset.featured === 'true';
        const targetContainer = isFeatured ? containers[0] : containers[1];
        
        if (targetContainer && project.style.display !== 'none') {
          targetContainer.appendChild(project);
        }
      });
    }
    
    function updateActiveFilters() {
      // Set initial active category filter
      categoryFilters[0].classList.remove('border-gray-300', 'text-gray-700');
      categoryFilters[0].classList.add('bg-blue-600', 'text-white', 'border-blue-600');
      
      filterProjects();
    }
    
    // Add smooth scroll to sections
    function scrollToSection(sectionId) {
      const section = document.getElementById(sectionId);
      if (section) {
        section.scrollIntoView({ 
          behavior: 'smooth',
          block: 'start'
        });
      }
    }
    
    // Intersection Observer for scroll animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in-up');
        }
      });
    }, observerOptions);
    
    // Observe project items for animations
    projectItems.forEach(item => {
      observer.observe(item);
    });
  });
</script>

<style>
  /* Custom animations */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }
  
  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Smooth transitions for filter changes */
  .portfolio-item {
    transition: all 0.3s ease;
  }
  
  /* Custom scrollbar for technology filters */
  .overflow-y-auto::-webkit-scrollbar {
    width: 4px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 2px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 2px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>