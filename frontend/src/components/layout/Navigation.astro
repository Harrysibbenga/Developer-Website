---
// src/components/layout/Navigation.astro
import { BUSINESS_INFO } from '../../utils/constants'

const currentPath = Astro.url.pathname

const navigationLinks = [
  { name: 'Home', href: '/', icon: '🏠' },
  { name: 'About', href: '/about', icon: '👨‍💻' },
  { name: 'Services', href: '/services', icon: '⚡' },
  { name: 'Portfolio', href: '/portfolio', icon: '💼' },
  { name: 'Contact', href: '/contact', icon: '📧' }
]

const isActive = (href: string) => {
  if (href === '/' && currentPath === '/') return true
  if (href !== '/' && currentPath.startsWith(href)) return true
  return false
}
---

<header class="sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" aria-label="Main navigation">
    <div class="flex justify-between items-center h-16">
      
      <!-- Logo/Brand -->
      <div class="flex-shrink-0">
        <a 
          href="/" 
          class="flex items-center space-x-3 group"
          aria-label={`${BUSINESS_INFO.name} - Home`}
        >
          <div class="w-10 h-10 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-xl flex items-center justify-center text-white font-bold text-lg group-hover:scale-105 transition-transform duration-200">
            {BUSINESS_INFO.name.split(' ').map(word => word[0]).join('')}
          </div>
          <div class="hidden sm:block">
            <div class="font-bold text-gray-900 text-lg">{BUSINESS_INFO.name}</div>
            <div class="text-sm text-gray-600">{BUSINESS_INFO.tagline.split(' ').slice(0, 3).join(' ')}</div>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-1">
          {navigationLinks.map((link) => (
            <a
              href={link.href}
              class={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${
                isActive(link.href)
                  ? 'bg-blue-100 text-blue-700 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'
              }`}
              aria-current={isActive(link.href) ? 'page' : undefined}
            >
              <span class="mr-1.5" aria-hidden="true">{link.icon}</span>
              {link.name}
            </a>
          ))}
        </div>
      </div>

      <!-- CTA Button -->
      <div class="hidden md:block">
        <a
          href="/contact"
          class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-600 to-indigo-600 text-white text-sm font-medium rounded-lg hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 shadow-sm"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
          </svg>
          Get Started
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          id="mobile-menu-button"
          class="inline-flex items-center justify-center p-2 rounded-lg text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Hamburger icon -->
          <svg class="block h-6 w-6" id="menu-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
          <!-- Close icon -->
          <svg class="hidden h-6 w-6" id="close-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div class="md:hidden" id="mobile-menu" style="display: none;">
      <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
        {navigationLinks.map((link) => (
          <a
            href={link.href}
            class={`block px-3 py-2 rounded-lg text-base font-medium transition-colors duration-200 ${
              isActive(link.href)
                ? 'bg-blue-100 text-blue-700'
                : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'
            }`}
            aria-current={isActive(link.href) ? 'page' : undefined}
          >
            <span class="mr-2" aria-hidden="true">{link.icon}</span>
            {link.name}
          </a>
        ))}
        
        <!-- Mobile CTA -->
        <div class="pt-4 border-t border-gray-200">
          <a
            href="/contact"
            class="block w-full text-center px-3 py-2 bg-gradient-to-r from-blue-600 to-indigo-600 text-white text-base font-medium rounded-lg hover:from-blue-700 hover:to-indigo-700 transition-all duration-200"
          >
            <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-2.4-.32l-3.6 1.2 1.2-3.6A8.959 8.959 0 013 12c0-4.418 3.582-8 8-8s8 3.582 8 8z"/>
            </svg>
            Get Started
          </a>
        </div>

        <!-- Mobile Contact Info -->
        <div class="pt-4 border-t border-gray-200 space-y-2">
          <a
            href={`mailto:${BUSINESS_INFO.contact.email}`}
            class="flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 transition-colors duration-200"
          >
            <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            </svg>
            {BUSINESS_INFO.contact.email}
          </a>
          <a
            href={`tel:${BUSINESS_INFO.contact.phone}`}
            class="flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 transition-colors duration-200"
          >
            <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
            </svg>
            {BUSINESS_INFO.contact.phone}
          </a>
        </div>
      </div>
    </div>
  </nav>

  <!-- Progress Bar -->
  <div 
    id="scroll-progress" 
    class="h-0.5 bg-gradient-to-r from-blue-600 to-indigo-600 transform origin-left scale-x-0 transition-transform duration-150"
  ></div>
</header>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');
    
    if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
      let isMenuOpen = false;
      
      mobileMenuButton.addEventListener('click', function() {
        isMenuOpen = !isMenuOpen;
        
        if (isMenuOpen) {
          mobileMenu.style.display = 'block';
          menuIcon.classList.add('hidden');
          closeIcon.classList.remove('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'true');
          
          // Animate menu in
          requestAnimationFrame(() => {
            mobileMenu.classList.add('animate-fade-in');
          });
        } else {
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          
          // Animate menu out
          mobileMenu.classList.remove('animate-fade-in');
          setTimeout(() => {
            mobileMenu.style.display = 'none';
          }, 150);
        }
      });
      
      // Close mobile menu when clicking outside
      document.addEventListener('click', function(event) {
        if (isMenuOpen && !mobileMenuButton.contains(event.target) && !mobileMenu.contains(event.target)) {
          isMenuOpen = false;
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          mobileMenu.classList.remove('animate-fade-in');
          setTimeout(() => {
            mobileMenu.style.display = 'none';
          }, 150);
        }
      });
      
      // Close mobile menu on navigation
      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', function() {
          isMenuOpen = false;
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          mobileMenu.classList.remove('animate-fade-in');
          setTimeout(() => {
            mobileMenu.style.display = 'none';
          }, 150);
        });
      });
    }
    
    // Scroll progress bar
    const scrollProgress = document.getElementById('scroll-progress');
    if (scrollProgress) {
      function updateScrollProgress() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrollPercentage = (scrollTop / scrollHeight) * 100;
        
        scrollProgress.style.transform = `scaleX(${scrollPercentage / 100})`;
      }
      
      window.addEventListener('scroll', updateScrollProgress);
      updateScrollProgress(); // Initial call
    }
    
    // Header background opacity on scroll
    const header = document.querySelector('header');
    if (header) {
      function updateHeaderBackground() {
        const scrollY = window.scrollY;
        const opacity = Math.min(scrollY / 100, 1);
        
        if (scrollY > 10) {
          header.classList.add('shadow-sm');
        } else {
          header.classList.remove('shadow-sm');
        }
      }
      
      window.addEventListener('scroll', updateHeaderBackground);
      updateHeaderBackground(); // Initial call
    }
  });
</script>

<style>
  .animate-fade-in {
    animation: fadeIn 0.15s ease-out forwards;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Ensure header stays on top during transitions */
  header {
    z-index: 9999;
  }
  
  /* Smooth header transitions */
  header {
    transition: all 0.2s ease;
  }
</style>