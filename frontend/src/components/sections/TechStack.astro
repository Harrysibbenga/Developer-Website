---
// src/components/sections/TechStack.astro
/**
 * Technology stack section showcasing skills and expertise levels
 * Features interactive skill bars and technology categories
 */

import { TECHNOLOGIES } from '../../utils/constants'
import TechIcon from '../decor/TechIcon.astro'
---

<section id="tech-stack" class="py-20 bg-gray-900 text-white relative overflow-hidden">
  <!-- Animated Background -->
  <div aria-hidden="true" class="absolute inset-0 overflow-hidden">
    <!-- Large background tech icons -->
    <TechIcon 
      tech="python" 
      size="xl"
      position={{ top: "5%", left: "5%" }} 
      animation="float"
      delay={0.5}
      opacity={0.03}
      blur={true}
    />
    <TechIcon 
      tech="django" 
      size="large"
      position={{ top: "15%", right: "8%" }} 
      animation="pulse"
      delay={1.2}
      opacity={0.04}
      blur={true}
    />
    <TechIcon 
      tech="vue" 
      size="xl"
      position={{ bottom: "10%", left: "10%" }} 
      animation="rotate"
      delay={2.0}
      opacity={0.03}
      blur={true}
    />
    <TechIcon 
      tech="postgresql" 
      size="large"
      position={{ bottom: "20%", right: "12%" }} 
      animation="float"
      delay={1.8}
      opacity={0.04}
      blur={true}
    />
    
    <!-- Code pattern background -->
    <div class="absolute inset-0 opacity-5">
      <div class="grid grid-cols-20 gap-px h-full">
        {Array.from({ length: 400 }, (_, i) => (
          <div 
            class="bg-blue-400 rounded-full opacity-20 animate-pulse"
            style={`animation-delay: ${(i * 20)}ms; animation-duration: ${3 + (i % 4)}s`}
          />
        ))}
      </div>
    </div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16 animate-on-scroll">
      <h2 class="text-4xl lg:text-5xl font-bold mb-6">
        Technology
        <span class="bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">
          Stack
        </span>
      </h2>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
        A comprehensive toolkit of modern technologies and frameworks, 
        backed by years of hands-on experience in production environments.
      </p>
    </div>

    <!-- Technology Categories -->
    <div class="grid lg:grid-cols-3 gap-8 mb-16">
      <!-- Backend Technologies -->
      <div class="tech-category bg-gray-800/50 backdrop-blur-sm rounded-2xl p-8 border border-gray-700/50 animate-on-scroll stagger-animation">
        <div class="flex items-center mb-6">
          <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center mr-4">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold">Backend</h3>
        </div>
        
        <div class="space-y-4">
          {TECHNOLOGIES.backend.map((tech) => (
            <div class="tech-skill-item">
              <div class="flex justify-between items-center mb-2">
                <div class="flex items-center">
                  <span class="text-2xl mr-3">{tech.icon}</span>
                  <span class="font-semibold">{tech.name}</span>
                </div>
                <div class="flex items-center text-sm text-gray-400">
                  <span class="mr-2">{tech.years}y</span>
                  <span>{tech.level}%</span>
                </div>
              </div>
              <div class="skill-bar bg-gray-700 rounded-full h-2 overflow-hidden">
                <div 
                  class="skill-progress h-full rounded-full transition-all duration-1000 ease-out"
                  style={`width: 0%; background: linear-gradient(90deg, ${tech.color}, ${tech.color}80)`}
                  data-width={tech.level}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Frontend Technologies -->
      <div class="tech-category bg-gray-800/50 backdrop-blur-sm rounded-2xl p-8 border border-gray-700/50 animate-on-scroll stagger-animation">
        <div class="flex items-center mb-6">
          <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center mr-4">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold">Frontend</h3>
        </div>
        
        <div class="space-y-4">
          {TECHNOLOGIES.frontend.map((tech) => (
            <div class="tech-skill-item">
              <div class="flex justify-between items-center mb-2">
                <div class="flex items-center">
                  <span class="text-2xl mr-3">{tech.icon}</span>
                  <span class="font-semibold">{tech.name}</span>
                </div>
                <div class="flex items-center text-sm text-gray-400">
                  <span class="mr-2">{tech.years}y</span>
                  <span>{tech.level}%</span>
                </div>
              </div>
              <div class="skill-bar bg-gray-700 rounded-full h-2 overflow-hidden">
                <div 
                  class="skill-progress h-full rounded-full transition-all duration-1000 ease-out"
                  style={`width: 0%; background: linear-gradient(90deg, ${tech.color}, ${tech.color}80)`}
                  data-width={tech.level}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Tools & DevOps -->
      <div class="tech-category bg-gray-800/50 backdrop-blur-sm rounded-2xl p-8 border border-gray-700/50 animate-on-scroll stagger-animation">
        <div class="flex items-center mb-6">
          <div class="w-12 h-12 bg-gradient-to-br from-orange-500 to-red-600 rounded-xl flex items-center justify-center mr-4">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold">Tools & DevOps</h3>
        </div>
        
        <div class="space-y-4">
          {TECHNOLOGIES.tools.map((tech) => (
            <div class="tech-skill-item">
              <div class="flex justify-between items-center mb-2">
                <div class="flex items-center">
                  <span class="text-2xl mr-3">{tech.icon}</span>
                  <span class="font-semibold">{tech.name}</span>
                </div>
                <div class="flex items-center text-sm text-gray-400">
                  <span class="mr-2">{tech.years}y</span>
                  <span>{tech.level}%</span>
                </div>
              </div>
              <div class="skill-bar bg-gray-700 rounded-full h-2 overflow-hidden">
                <div 
                  class="skill-progress h-full rounded-full transition-all duration-1000 ease-out"
                  style={`width: 0%; background: linear-gradient(90deg, ${tech.color}, ${tech.color}80)`}
                  data-width={tech.level}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>

    <!-- Specialties Section -->
    <div class="bg-gray-800/30 backdrop-blur-sm rounded-2xl p-8 lg:p-12 border border-gray-700/50 animate-on-scroll">
      <h3 class="text-3xl font-bold text-center mb-12">
        Technical <span class="text-cyan-400">Specialties</span>
      </h3>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
        {TECHNOLOGIES.specialties.map((specialty, index) => (
          <div 
            class="specialty-card text-center group animate-on-scroll stagger-animation"
            style={`animation-delay: ${index * 100}ms`}
          >
            <div class="w-20 h-20 bg-gradient-to-br from-cyan-500 to-blue-600 rounded-2xl flex items-center justify-center mx-auto mb-4 text-3xl group-hover:scale-110 transition-transform duration-300">
              {specialty.icon}
            </div>
            <h4 class="text-xl font-semibold mb-3 group-hover:text-cyan-400 transition-colors">
              {specialty.name}
            </h4>
            <div class="flex flex-wrap justify-center gap-2">
              {specialty.technologies.map((tech) => (
                <span class="px-2 py-1 bg-gray-700 text-gray-300 rounded text-sm hover:bg-cyan-600 hover:text-white transition-colors">
                  {tech}
                </span>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Continuous Learning -->
    <div class="text-center mt-16 animate-on-scroll">
      <div class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-cyan-600/20 to-blue-600/20 rounded-full border border-cyan-500/30 mb-6">
        <svg class="w-5 h-5 text-cyan-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
        </svg>
        <span class="text-cyan-300 font-medium">Always Learning</span>
      </div>
      <h3 class="text-2xl font-bold mb-4">Staying Current with Technology</h3>
      <p class="text-gray-300 max-w-2xl mx-auto">
        The tech landscape evolves rapidly. I continuously update my skills, 
        explore new frameworks, and adopt best practices to deliver cutting-edge solutions.
      </p>
    </div>
  </div>
</section>

<style>
  .tech-category {
    transition: all 0.3s ease;
  }
  
  .tech-category:hover {
    transform: translateY(-5px);
    border-color: rgb(34 197 94 / 0.5);
  }
  
  .tech-skill-item:hover .skill-progress {
    box-shadow: 0 0 10px currentColor;
  }
  
  .specialty-card:hover {
    transform: translateY(-5px);
  }
  
  /* Animation classes */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease-out;
  }
  
  .animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
  }
  
  .stagger-animation {
    transition-delay: var(--animation-delay, 0ms);
  }
</style>

<script>
  // Animate skill bars when they come into view
  document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
      threshold: 0.3,
      rootMargin: '0px 0px -50px 0px'
    }
    
    const skillObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const skillBars = entry.target.querySelectorAll('.skill-progress')
          
          skillBars.forEach((bar, index) => {
            setTimeout(() => {
              const width = bar.getAttribute('data-width')
              bar.style.width = `${width}%`
            }, index * 100)
          })
          
          skillObserver.unobserve(entry.target)
        }
      })
    }, observerOptions)
    
    // Observe tech category sections
    document.querySelectorAll('.tech-category').forEach((section) => {
      skillObserver.observe(section)
    })
  })
</script>